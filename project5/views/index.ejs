<html>

<head>
  <title>The Ideal Galaxy</title>
  <link href="style.css" rel="stylesheet">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Afacad+Flux:wght@100..1000&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@600&family=Protest+Guerrilla&display=swap" rel="stylesheet">
  <script src="/socket.io/socket.io.js"></script>
</head>

<body>
  <%- include('nav.ejs') %>
<div class="occupie"></div>
    <div class="visits-counter">
      <h1>Hi <%=username%>, You have visited the Galaxy <%=visitsToSite%> times.</h1>
    </div>
    <div class="search-container">
      <form method="GET" action="/search">
        <label for="searchType"><h2>Search by:</h2></label>
        <select name="searchType" class="search-select" id="searchType">
          <option class="search-label" value="all">All Starmaps</option>
          <option class="search-label" value="theme">By Theme</option>
          <option class="search-label" value="name">By Username</option>
          <option class="search-label" value="interest">By Interests</option>
        </select>
        <input type="text" class="search-bar" id="top-search-bar" name="searchTerm" placeholder="Search..." />
      </form>
    </div>
    <div id="notification-container"></div>
    <div class="all-posts">
      <% posts.forEach( (post)=> { %>
        <%- include('individualPost.ejs', {post: post}) %>
          <% }) %>
    </div>
</body>
<script>
  const socket = io({reconnection: true,
    reconnectionAttempts: 10,
    reconnectionDelay: 5000 });
  
  socket.on("notification", (data) => {
    console.log("Notification received:", data);

    const logBoard = document.getElementById("notification-container");
    const logMessage = document.createElement("div");
    logMessage.classList.add("log-container")
    logMessage.textContent = data.message;
    logBoard.appendChild(logMessage);
    setTimeout(() => {
      logMessage.style.transition = "opacity 1s ease";
      logMessage.style.opacity = "0";

      setTimeout(() => {
        logBoard.removeChild(logMessage);
      }, 1000);
    }, 3000);
  });

  socket.on("interest-liked", (data) => {
    const id = data.postId
    const index = data.index
    const like = data.like;
    const name = data.name;
    const likeArea = document.getElementById(`likeArea-${id}-${name}`)
    const newSize =  6 + like;
    const fontSize = 1 + like*0.5;
    likeArea.textContent = `❤️ ${like}`;
    likeArea.style.width = `${newSize}vh`;
    likeArea.style.height = `${newSize}vh`;
    likeArea.style.fontSize = `${fontSize}vh`
  });

  document.querySelectorAll(".interest-like-btn").forEach((btn) => {
    btn.addEventListener("click", (e) => {
      //e.preventDefault();

      const postId = btn.getAttribute("data-post-id");
      const interestIndex = btn.getAttribute("data-interest-index");
      const username = "<%= username %>"
      socket.emit("like-interest", { postId, interestIndex, username });
    });
  });
</script>

</html>